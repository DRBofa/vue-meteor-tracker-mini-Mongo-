{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsDivider/vsDivider.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsDivider/vsDivider.vue","filename":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsDivider/vsDivider.vue","passPerPreset":false,"envName":"development","cwd":"/home/bona/Desktop/my-project/VueX","root":"/home/bona/Desktop/my-project/VueX","generatorOpts":{"filename":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsDivider/vsDivider.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsDivider/vsDivider.vue"}},"code":"var _color;\n\nmodule.link(\"../../utils/color.js\", {\n  \"default\": function (v) {\n    _color = v;\n  }\n}, 0);\nmodule.exportDefault({\n  name: \"VsDivider\",\n  props: {\n    color: {\n      type: String,\n      \"default\": 'rgba(0, 0, 0,.1)'\n    },\n    icon: {\n      \"default\": null,\n      type: String\n    },\n    borderStyle: {\n      \"default\": 'solid',\n      type: String\n    },\n    borderHeight: {\n      \"default\": '1px',\n      type: String\n    },\n    position: {\n      \"default\": 'center',\n      type: String\n    },\n    iconPack: {\n      \"default\": 'material-icons',\n      type: String\n    }\n  },\n  computed: {\n    getWidthAfter: function () {\n      var widthx = '100%';\n\n      if (this.position == 'left') {\n        widthx = '0%';\n      } else if (this.position == 'left-center') {\n        widthx = '25%';\n      } else if (this.position == 'right-center') {\n        widthx = '75%';\n      } else if (this.position == 'right') {\n        widthx = '100%';\n      }\n\n      return widthx;\n    },\n    getWidthBefore: function () {\n      var widthx = '100%';\n\n      if (this.position == 'left') {\n        widthx = '100%';\n      } else if (this.position == 'left-center') {\n        widthx = '75%';\n      } else if (this.position == 'right-center') {\n        widthx = '25%';\n      } else if (this.position == 'right') {\n        widthx = '0%';\n      }\n\n      return widthx;\n    },\n    borderColor: function () {\n      if (!_color.isColor(this.color)) {\n        return _color.getColor(this.color);\n      }\n    },\n    afterStyle: function () {\n      var classes = {\n        width: this.getWidthAfter,\n        'border-top-width': this.borderHeight,\n        'border-top-style': this.borderStyle\n      };\n\n      if (!_color.isColor(this.color)) {\n        classes['border-top-color'] = this.borderColor;\n      }\n\n      return classes;\n    },\n    beforeStyle: function () {\n      var classes = {\n        width: this.getWidthBefore,\n        'border-top-width': this.borderHeight,\n        'border-top-style': this.borderStyle\n      };\n\n      if (!_color.isColor(this.color)) {\n        classes['border-top-color'] = this.borderColor;\n      }\n\n      return classes;\n    },\n    borderClass: function () {\n      var classes = {};\n\n      if (_color.isColor(this.color)) {\n        classes[\"vs-divider-border-\" + this.color] = true;\n      }\n\n      return classes;\n    },\n    textColor: function () {\n      if (!_color.isColor(this.color)) {\n        return _color.getColor(this.color === 'rgba(0, 0, 0,.1)' ? 'rgba(0,0,0,0.8)' : this.color);\n      }\n    },\n    textClass: function () {\n      var classes = {};\n\n      if (_color.isColor(this.color)) {\n        classes[\"vs-divider-text-\" + this.color] = true;\n      }\n\n      return classes;\n    }\n  }\n});","map":{"version":3,"sources":["/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsDivider/vsDivider.vue"],"names":["_color","module","link","v","exportDefault","name","props","color","type","String","icon","borderStyle","borderHeight","position","iconPack","computed","getWidthAfter","widthx","getWidthBefore","borderColor","isColor","getColor","afterStyle","classes","width","beforeStyle","borderClass","textColor","textClass"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport _color from '../../utils/color.js'\r\n\r\nexport default {\r\n  name: \"VsDivider\",\r\n  props:{\r\n    color:{\r\n      type:String,\r\n      default:'rgba(0, 0, 0,.1)'\r\n    },\r\n    icon:{\r\n      default:null,\r\n      type:String\r\n    },\r\n    borderStyle:{\r\n      default:'solid',\r\n      type:String\r\n    },\r\n    borderHeight:{\r\n      default:'1px',\r\n      type:String\r\n    },\r\n    position:{\r\n      default:'center',\r\n      type:String\r\n    },\r\n    iconPack:{\r\n      default:'material-icons',\r\n      type:String\r\n    },\r\n  },\r\n  computed:{\r\n    getWidthAfter(){\r\n      let widthx = '100%'\r\n      if(this.position == 'left'){\r\n        widthx = '0%'\r\n      } else if (this.position == 'left-center') {\r\n        widthx = '25%'\r\n      } else if (this.position == 'right-center') {\r\n        widthx = '75%'\r\n      } else if (this.position == 'right') {\r\n        widthx = '100%'\r\n      }\r\n      return widthx\r\n    },\r\n    getWidthBefore(){\r\n      let widthx = '100%'\r\n      if(this.position == 'left'){\r\n        widthx = '100%'\r\n      } else if (this.position == 'left-center') {\r\n        widthx = '75%'\r\n      } else if (this.position == 'right-center') {\r\n        widthx = '25%'\r\n      } else if (this.position == 'right') {\r\n        widthx = '0%'\r\n      }\r\n      return widthx\r\n    },\r\n    borderColor() {\r\n      if (!_color.isColor(this.color)) {\r\n        return _color.getColor(this.color)\r\n      }\r\n    },\r\n    afterStyle() {\r\n      const classes = {\r\n        width: this.getWidthAfter,\r\n        'border-top-width': this.borderHeight,\r\n        'border-top-style': this.borderStyle\r\n      }\r\n      if (!_color.isColor(this.color)) {\r\n        classes['border-top-color'] = this.borderColor\r\n      }\r\n      return classes\r\n    },\r\n    beforeStyle() {\r\n      const classes = {\r\n        width: this.getWidthBefore,\r\n        'border-top-width': this.borderHeight,\r\n        'border-top-style': this.borderStyle\r\n      }\r\n      if (!_color.isColor(this.color)) {\r\n        classes['border-top-color'] = this.borderColor\r\n      }\r\n      return classes\r\n    },\r\n    borderClass() {\r\n      const classes = {}\r\n      if (_color.isColor(this.color)) {\r\n        classes[`vs-divider-border-${this.color}`] = true\r\n      }\r\n      return classes\r\n    },\r\n    textColor() {\r\n      if (!_color.isColor(this.color)) {\r\n        return _color.getColor(this.color === 'rgba(0, 0, 0,.1)' ? 'rgba(0,0,0,0.8)' : this.color)\r\n      }\r\n    },\r\n    textClass() {\r\n      const classes = {}\r\n      if (_color.isColor(this.color)) {\r\n        classes[`vs-divider-text-${this.color}`] = true\r\n      }\r\n      return classes\r\n    }\r\n  }\r\n}\r\n"]},"sourceType":"script","hash":"0303b7a3f035c814dd91910a74b157e9e643849a"}
