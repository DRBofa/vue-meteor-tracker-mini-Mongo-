{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsSwitch/vsSwitch.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsSwitch/vsSwitch.vue","filename":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsSwitch/vsSwitch.vue","passPerPreset":false,"envName":"development","cwd":"/home/bona/Desktop/my-project/VueX","root":"/home/bona/Desktop/my-project/VueX","generatorOpts":{"filename":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsSwitch/vsSwitch.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsSwitch/vsSwitch.vue"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _color;\n\nmodule.link(\"../../utils/color.js\", {\n  \"default\": function (v) {\n    _color = v;\n  }\n}, 0);\nmodule.exportDefault({\n  name: 'VsSwitch',\n  inheritAttrs: false,\n  props: {\n    value: {},\n    color: {\n      \"default\": 'primary',\n      type: String\n    },\n    vsIcon: {\n      \"default\": null,\n      type: String\n    },\n    vsIconOn: {\n      \"default\": null,\n      type: String\n    },\n    vsIconOff: {\n      \"default\": null,\n      type: String\n    },\n    iconPack: {\n      \"default\": 'material-icons',\n      type: String\n    },\n    vsValue: {}\n  },\n  data: function () {\n    return {\n      widthx: 42,\n      checkboxClicked: false\n    };\n  },\n  computed: {\n    style: function () {\n      return {\n        background: this.value ? _color.getColor(this.color, 1) : null,\n        width: this.widthx + \"px\"\n      };\n    },\n    listeners: function () {\n      var _this = this;\n\n      return (0, _objectSpread2.default)({}, this.$listeners, {\n        change: function (evt) {\n          _this.toggleValue(evt);\n        }\n      });\n    },\n    isChecked: function () {\n      return this.isArrayx() ? this.isArrayIncludes() : this.value;\n    }\n  },\n  mounted: function () {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      var w = _this2.$refs.on.clientWidth > _this2.$refs.off.clientWidth ? _this2.$refs.on.clientWidth : _this2.$refs.off.clientWidth;\n      _this2.widthx = w + 24;\n    });\n  },\n  methods: {\n    toggleCheckbox: function () {\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        this.$refs.inputCheckbox.checked = !this.$refs.inputCheckbox.checked;\n        this.$emit('input', this.$refs.inputCheckbox.checked);\n      }\n    },\n    toggleValue: function (evt) {\n      if (this.isArrayx()) {\n        this.setArray(evt);\n      } else {\n        this.$emit('input', evt.target.checked);\n        this.$emit('change', evt);\n      }\n    },\n    setArray: function (evt) {\n      var value = this.value.slice(0); // Copy Array.\n\n      if (this.isArrayIncludes()) {\n        value.splice(value.indexOf(this.vsValue), 1); // delete value\n\n        this.$emit('input', value);\n        this.$emit('change', evt);\n      } else {\n        value.push(this.vsValue); // add value new\n\n        this.$emit('input', value);\n        this.$emit('change', evt);\n      }\n    },\n    isArrayIncludes: function () {\n      var modelx = this.value;\n      var value = this.vsValue;\n      return modelx.includes(value);\n    },\n    isArrayx: function () {\n      return Array.isArray(this.value);\n    }\n  }\n});","map":{"version":3,"sources":["/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsSwitch/vsSwitch.vue"],"names":["_color","module","link","v","exportDefault","name","inheritAttrs","props","value","color","type","String","vsIcon","vsIconOn","vsIconOff","iconPack","vsValue","data","widthx","checkboxClicked","computed","style","background","getColor","width","listeners","$listeners","change","evt","toggleValue","isChecked","isArrayx","isArrayIncludes","mounted","$nextTick","w","$refs","on","clientWidth","off","methods","toggleCheckbox","navigator","userAgent","toLowerCase","indexOf","inputCheckbox","checked","$emit","setArray","target","slice","splice","push","modelx","includes","Array","isArray"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport _color from '../../utils/color.js'\r\nexport default {\r\n  name:'VsSwitch',\r\n  inheritAttrs:false,\r\n  props:{\r\n    value:{},\r\n    color:{\r\n      default:'primary',\r\n      type:String\r\n    },\r\n    vsIcon:{\r\n      default:null,\r\n      type:String\r\n    },\r\n    vsIconOn:{\r\n      default:null,\r\n      type:String\r\n    },\r\n    vsIconOff:{\r\n      default:null,\r\n      type:String\r\n    },\r\n    iconPack:{\r\n      default:'material-icons',\r\n      type:String\r\n    },\r\n    vsValue:{}\r\n  },\r\n  data:()=>({\r\n    widthx:42,\r\n    checkboxClicked: false,\r\n  }),\r\n  computed:{\r\n    style(){\r\n      return {\r\n        background: this.value?_color.getColor(this.color,1):null,\r\n        width: `${this.widthx}px`\r\n      }\r\n    },\r\n    listeners(){\r\n      return {\r\n        ...this.$listeners,\r\n        change: (evt) => {\r\n          this.toggleValue(evt)\r\n        }\r\n      }\r\n    },\r\n    isChecked(){\r\n      return this.isArrayx() ? this.isArrayIncludes() : this.value\r\n    },\r\n  },\r\n  mounted(){\r\n    this.$nextTick(()=>{\r\n      let w = this.$refs.on.clientWidth>this.$refs.off.clientWidth?this.$refs.on.clientWidth:this.$refs.off.clientWidth\r\n      this.widthx = w + 24\r\n    })\r\n\r\n  },\r\n  methods:{\r\n    toggleCheckbox() {\r\n      if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\r\n        this.$refs.inputCheckbox.checked = !this.$refs.inputCheckbox.checked;\r\n        this.$emit('input', this.$refs.inputCheckbox.checked);\r\n      }\r\n    },\r\n    toggleValue(evt){\r\n      if(this.isArrayx()){\r\n        this.setArray(evt)\r\n      }\r\n      else {\r\n        this.$emit('input',evt.target.checked)\r\n        this.$emit('change',evt)\r\n      }\r\n    },\r\n    setArray(evt){\r\n      const value = this.value.slice(0) // Copy Array.\r\n      if(this.isArrayIncludes()){\r\n        value.splice(value.indexOf(this.vsValue),1) // delete value\r\n        this.$emit('input', value)\r\n        this.$emit('change', evt)\r\n      } else {\r\n        value.push(this.vsValue) // add value new\r\n        this.$emit('input', value)\r\n        this.$emit('change', evt)\r\n      }\r\n    },\r\n    isArrayIncludes(){\r\n      let modelx = this.value\r\n      let value = this.vsValue\r\n      return modelx.includes(value)\r\n    },\r\n    isArrayx(){\r\n      return Array.isArray(this.value)\r\n    }\r\n  },\r\n}\r\n"]},"sourceType":"script","hash":"6a66a8aaeb7d2facb0317f37933edac08c57d860"}
