{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsUpload/vsUpload.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsUpload/vsUpload.vue","filename":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsUpload/vsUpload.vue","passPerPreset":false,"envName":"development","cwd":"/home/bona/Desktop/my-project/VueX","root":"/home/bona/Desktop/my-project/VueX","generatorOpts":{"filename":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsUpload/vsUpload.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsUpload/vsUpload.vue"}},"code":"var viewUpload;\nmodule.link(\"./viewUpload\", {\n  \"default\": function (v) {\n    viewUpload = v;\n  }\n}, 0);\nvar lastTap = 0;\nmodule.exportDefault({\n  name: 'VsUpload',\n  components: {\n    viewUpload: viewUpload\n  },\n  inheritAttrs: false,\n  props: {\n    fileName: {\n      \"default\": null,\n      type: String\n    },\n    text: {\n      \"default\": 'Upload File',\n      type: String\n    },\n    limit: {\n      \"default\": null,\n      type: [Number, String]\n    },\n    action: {\n      \"default\": null,\n      type: String\n    },\n    headers: {\n      \"default\": null,\n      type: Object\n    },\n    data: {\n      \"default\": null,\n      type: Object\n    },\n    automatic: {\n      \"default\": false,\n      type: Boolean\n    },\n    showUploadButton: {\n      \"default\": true,\n      type: Boolean\n    },\n    singleUpload: {\n      \"default\": false,\n      type: Boolean\n    }\n  },\n  data: function () {\n    return {\n      inputValue: null,\n      type: null,\n      srcs: [],\n      filesx: [],\n      itemRemove: [],\n      percent: 0,\n      viewActive: false,\n      viewSrc: null\n    };\n  },\n  computed: {\n    postFiles: function () {\n      var postFiles = Array.prototype.slice.call(this.filesx);\n      postFiles = postFiles.filter(function (item) {\n        return !item.hasOwnProperty('remove');\n      });\n      return postFiles.length;\n    }\n  },\n  watch: {\n    percent: function () {\n      var _this2 = this;\n\n      if (this.percent >= 100) {\n        this.srcs.forEach(function (file) {\n          file.percent = 100;\n        });\n        setTimeout(function () {\n          _this2.percent = 0;\n        }, 1000);\n      }\n    }\n  },\n  methods: {\n    viewImage: function (src, evt) {\n      var timeout;\n      var eventx = 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch ? 'touchstart' : 'click';\n\n      if (eventx == 'click') {\n        this.viewActive = true;\n        this.viewSrc = src;\n      } else {\n        if (evt.type == 'touchend') {\n          var currentTime = new Date().getTime();\n          var tapLength = currentTime - lastTap;\n          clearTimeout(timeout);\n\n          if (tapLength < 500 && tapLength > 0) {\n            this.viewActive = true;\n            this.viewSrc = src;\n            event.preventDefault();\n          }\n\n          lastTap = currentTime;\n        }\n      }\n    },\n    removeFile: function (index) {\n      var _this3 = this;\n\n      this.itemRemove.push(index);\n      setTimeout(function () {\n        _this3.filesx[index].remove = true;\n      }, 301);\n    },\n    getFiles: function (e) {\n      this.$emit('update:vsFile', e.target.value);\n\n      var _this = this;\n\n      function uploadImage(e) {\n        var orientation = 'h';\n        var image = new Image();\n        image.src = e.target.result;\n\n        image.onload = function () {\n          if (this.width > this.height) {\n            orientation = 'w';\n          }\n\n          switchImage(this, orientation);\n        };\n      }\n\n      function switchImage(image, orientation) {\n        _this.srcs.push({\n          src: image.src,\n          orientation: orientation,\n          type: _this.typex,\n          percent: null,\n          error: false,\n          remove: null\n        });\n      }\n\n      var files = e.target.files;\n      var count = this.srcs.length - this.itemRemove.length;\n\n      for (var file in files) {\n        if (files.hasOwnProperty(file)) {\n          if (this.limit) {\n            count++;\n\n            if (count > Number(this.limit)) {\n              break;\n            }\n          }\n\n          var reader = new FileReader();\n          var filex = files[file];\n\n          if (/image.*/.test(filex.type)) {\n            this.typex = 'image';\n            this.filesx.push(filex);\n            reader.onload = uploadImage;\n            reader.readAsDataURL(filex);\n          } else if (/video.*/.test(filex.type)) {\n            this.typex = 'video';\n            this.filesx.push(filex);\n\n            _this.srcs.push({\n              src: null,\n              name: filex.name,\n              type: 'video',\n              percent: null,\n              error: false,\n              remove: null\n            });\n          } else {\n            this.filesx.push(filex);\n\n            _this.srcs.push({\n              src: null,\n              name: filex.name,\n              percent: null,\n              error: false,\n              remove: null\n            });\n          }\n        }\n      }\n\n      var input = this.$refs.fileInput;\n      input.type = 'text';\n      input.type = 'file';\n\n      if (this.automatic) {\n        this.uploadx('all');\n      }\n    },\n    upload: function (index) {\n      var _this4 = this;\n\n      var formData = new FormData();\n      var postFiles = Array.prototype.slice.call(this.filesx);\n\n      if (typeof index == 'number') {\n        postFiles = [postFiles[index]];\n      } else if (index == 'all') {\n        postFiles = postFiles.filter(function (item) {\n          return !item.hasOwnProperty('remove');\n        });\n      }\n\n      var data = this.data || {};\n\n      for (var key in data) {\n        formData.append(key, data[key]);\n      }\n\n      if (this.singleUpload) {\n        postFiles.forEach(function (filex) {\n          var formData = new FormData();\n\n          for (var key in data) {\n            formData.append(key, data[key]);\n          }\n\n          formData.append(_this4.fileName, filex, filex.name);\n\n          _this4.uploadx(index, formData);\n        });\n      } else {\n        postFiles.forEach(function (filex) {\n          formData.append(_this4.fileName, filex, filex.name);\n        });\n        this.uploadx(index, formData);\n      }\n    },\n    uploadx: function (index, formData) {\n      var self = this;\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = function error(e) {\n        self.$emit('on-error', e);\n\n        if (typeof index == 'number') {\n          self.srcs[index].error = true;\n        }\n      };\n\n      xhr.onload = function onload(e) {\n        if (xhr.status < 200 || xhr.status >= 300) {\n          self.$emit('on-error', e);\n\n          if (typeof index == 'number') {\n            self.srcs[index].error = true;\n          }\n        } else {\n          self.$emit('on-success', e);\n        }\n      };\n\n      if (xhr.upload) {\n        xhr.upload.onprogress = function progress(e) {\n          if (e.total > 0) {\n            var percent = e.loaded / e.total * 100;\n\n            if (typeof index == 'number') {\n              self.srcs[index].percent = Math.trunc(percent);\n            } else {\n              self.percent = Math.trunc(percent);\n            }\n          }\n        };\n      }\n\n      xhr.withCredentials = true;\n      xhr.open('POST', this.action);\n      var headers = this.headers || {};\n\n      for (var head in headers) {\n        if (headers.hasOwnProperty(head) && headers[head] !== null) {\n          xhr.setRequestHeader(head, headers[head]);\n        }\n      }\n\n      xhr.send(formData);\n    }\n  }\n});","map":{"version":3,"sources":["/home/bona/Desktop/my-project/VueX/node_modules/vuesax/dist/components/vsUpload/vsUpload.vue"],"names":["viewUpload","module","link","v","lastTap","exportDefault","name","components","inheritAttrs","props","fileName","type","String","text","limit","Number","action","headers","Object","data","automatic","Boolean","showUploadButton","singleUpload","inputValue","srcs","filesx","itemRemove","percent","viewActive","viewSrc","computed","postFiles","Array","prototype","slice","call","filter","item","hasOwnProperty","length","watch","forEach","file","setTimeout","methods","viewImage","src","evt","timeout","eventx","window","DocumentTouch","document","currentTime","Date","getTime","tapLength","clearTimeout","event","preventDefault","removeFile","index","push","remove","getFiles","e","$emit","target","value","_this","uploadImage","orientation","image","Image","result","onload","width","height","switchImage","typex","error","files","count","reader","FileReader","filex","test","readAsDataURL","input","$refs","fileInput","uploadx","upload","formData","FormData","key","append","self","xhr","XMLHttpRequest","onerror","status","onprogress","progress","total","loaded","Math","trunc","withCredentials","open","head","setRequestHeader","send"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport viewUpload from './viewUpload'\nvar lastTap = 0;\nexport default {\n  name: 'VsUpload',\n  components:{\n    viewUpload\n  },\n  inheritAttrs:false,\n  props:{\n    fileName:{\n      default:null,\n      type:String\n    },\n    text:{\n      default:'Upload File',\n      type:String\n    },\n    limit:{\n      default:null,\n      type:[Number,String]\n    },\n    action:{\n      default:null,\n      type:String\n    },\n    headers:{\n      default:null,\n      type:Object\n    },\n    data: {\n      default: null,\n      type: Object\n    },\n    automatic:{\n      default: false,\n      type: Boolean\n    },\n    showUploadButton: {\n      default: true,\n      type: Boolean\n    },\n    singleUpload: {\n      default: false,\n      type: Boolean\n    }\n  },\n  data:()=>({\n    inputValue:null,\n    type:null,\n    srcs:[],\n    filesx:[],\n    itemRemove:[],\n    percent:0,\n    viewActive:false,\n    viewSrc:null,\n  }),\n  computed:{\n    postFiles(){\n      let postFiles = Array.prototype.slice.call(this.filesx);\n      postFiles = postFiles.filter((item)=>{\n        return !item.hasOwnProperty('remove')\n      })\n      return postFiles.length\n    },\n  },\n  watch:{\n    percent(){\n      if(this.percent >= 100) {\n        this.srcs.forEach((file)=>{\n          file.percent = 100\n        })\n        setTimeout(()=>{\n          this.percent = 0\n        },1000)\n      }\n    }\n  },\n  methods:{\n    viewImage(src,evt){\n      var timeout;\n\n      var eventx = (('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch)) ? 'touchstart' : 'click';\n      if(eventx == 'click'){\n        this.viewActive = true\n        this.viewSrc = src\n      } else {\n        if(evt.type == 'touchend'){\n          var currentTime = new Date().getTime();\n          var tapLength = currentTime - lastTap;\n          clearTimeout(timeout);\n          if (tapLength < 500 && tapLength > 0) {\n            this.viewActive = true\n            this.viewSrc = src\n            event.preventDefault();\n          }\n          lastTap = currentTime;\n        }\n      }\n    },\n    removeFile(index){\n      this.itemRemove.push(index)\n      setTimeout(()=>{\n        this.filesx[index].remove = true\n      },301)\n    },\n    getFiles(e) {\n\n      this.$emit('update:vsFile', e.target.value)\n      let _this = this\n      function uploadImage(e) {\n        let orientation = 'h'\n        var image = new Image();\n        image.src = e.target.result;\n        image.onload = function() {\n          if(this.width > this.height){\n            orientation = 'w'\n          }\n          switchImage(this,orientation);\n\n        }\n      }\n      function switchImage(image,orientation) {\n        _this.srcs.push({\n          src:image.src,\n          orientation:orientation,\n          type:_this.typex,\n          percent:null,\n          error:false,\n          remove:null\n        })\n      }\n\n      var files = e.target.files;\n      let count = (this.srcs.length - this.itemRemove.length)\n      for (const file in files) {\n\n\n        if (files.hasOwnProperty(file)) {\n          if(this.limit) {\n            count ++\n            if( count > Number(this.limit) ) {\n              break\n            }\n          }\n\n          var reader  = new FileReader();\n          const filex = files[file];\n          if (/image.*/.test(filex.type)) {\n            this.typex = 'image'\n            this.filesx.push(filex)\n            reader.onload = uploadImage;\n            reader.readAsDataURL(filex);\n          } else if (/video.*/.test(filex.type)) {\n            this.typex = 'video'\n            this.filesx.push(filex)\n            _this.srcs.push({\n              src:null,\n              name:filex.name,\n              type:'video',\n              percent:null,\n              error:false,\n              remove:null\n            })\n          } else {\n            this.filesx.push(filex)\n            _this.srcs.push({\n              src:null,\n              name:filex.name,\n              percent:null,\n              error:false,\n              remove:null\n            })\n          }\n\n        }\n      }\n      const input = this.$refs.fileInput\n      input.type = 'text'\n      input.type = 'file'\n\n      if (this.automatic) {\n        this.uploadx('all')\n      }\n    },\n    upload(index) {\n      const formData = new FormData();\n      let postFiles = Array.prototype.slice.call(this.filesx);\n      if(typeof index == 'number'){\n        postFiles = [postFiles[index]]\n      } else if (index == 'all'){\n        postFiles = postFiles.filter((item)=>{\n          return !item.hasOwnProperty('remove')\n        })\n      }\n      const data = this.data || {};\n      for (var key in data) {\n        formData.append(key, data[key]);\n      }\n\n      if(this.singleUpload) {\n        postFiles.forEach((filex)=>{\n          const formData = new FormData();\n          for (var key in data) {\n            formData.append(key, data[key]);\n          }\n          formData.append(this.fileName, filex, filex.name)\n\n          this.uploadx(index, formData)\n        })\n      } else {\n        postFiles.forEach((filex)=>{\n          formData.append(this.fileName, filex, filex.name)\n        })\n        this.uploadx(index, formData)\n      }\n    },\n    uploadx(index, formData){\n      let self = this\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = function error(e) {\n        self.$emit('on-error',e)\n        if(typeof index == 'number'){\n          self.srcs[index].error = true\n        }\n      };\n\n      xhr.onload = function onload(e) {\n\n        if (xhr.status < 200 || xhr.status >= 300) {\n          self.$emit('on-error',e)\n          if(typeof index == 'number'){\n            self.srcs[index].error = true\n          }\n        } else {\n          self.$emit('on-success',e)\n        }\n      }\n\n\n      if (xhr.upload) {\n        xhr.upload.onprogress = function progress(e) {\n          if (e.total > 0) {\n            let percent = e.loaded / e.total * 100;\n            if(typeof index == 'number'){\n              self.srcs[index].percent = Math.trunc(percent)\n            } else {\n              self.percent = Math.trunc(percent)\n            }\n          }\n        };\n      }\n\n      xhr.withCredentials = true;\n\n      xhr.open('POST', this.action);\n\n      const headers = this.headers || {};\n\n      for (let head in headers) {\n        if (headers.hasOwnProperty(head) && headers[head] !== null) {\n          xhr.setRequestHeader(head, headers[head]);\n        }\n      }\n\n      xhr.send(formData)\n    },\n\n  }\n}\n"]},"sourceType":"script","hash":"92f9377255d6f1076c236c22599f68eadc3fd4de"}
