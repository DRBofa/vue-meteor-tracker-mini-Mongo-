{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/bona/Desktop/my-project/VueX/client/pages/Item.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/bona/Desktop/my-project/VueX/client/pages/Item.vue","filename":"/home/bona/Desktop/my-project/VueX/client/pages/Item.vue","passPerPreset":false,"envName":"development","cwd":"/home/bona/Desktop/my-project/VueX","root":"/home/bona/Desktop/my-project/VueX","generatorOpts":{"filename":"/home/bona/Desktop/my-project/VueX/client/pages/Item.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/bona/Desktop/my-project/VueX/client/pages/Item.vue"}},"code":"module.exportDefault({\n  name: '',\n  data: function () {\n    return {\n      items: [{\n        name: 'Florida',\n        place: 'FL'\n      }, {\n        name: 'Georgia',\n        place: 'GA'\n      }, {\n        name: 'Nebraska',\n        place: 'NE'\n      }, {\n        name: 'California',\n        place: 'CA'\n      }, {\n        name: 'New York',\n        place: 'NY'\n      }],\n      form: {\n        name: null,\n        place: null\n      }\n    };\n  },\n  computed: {\n    branches: function () {\n      return this.$store.state.branches;\n    }\n  },\n  methods: {\n    btnAdd: function () {\n      var _this = this;\n\n      Meteor.call('insertBranch', this.form, function (err, re) {\n        if (!err) {\n          _this.form = {\n            name: null,\n            price: null,\n            cust: null,\n            memo: null\n          };\n          alert('Success');\n        }\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/home/bona/Desktop/my-project/VueX/client/pages/Item.vue"],"names":["module","exportDefault","name","data","items","place","form","computed","branches","$store","state","methods","btnAdd","Meteor","call","err","re","price","cust","memo","alert"],"mappings":"AAAAA,MAAM,CAACC,aAAP,CAqCe;AACXC,EAAAA,IAAI,EAAE,EADK;AAEXC,EAAAA,IAFW,cAEJ;AACH,WAAO;AACHC,MAAAA,KAAK,EAAE,CACT;AAAEF,QAAAA,IAAI,EAAE,SAAR;AAAkBG,QAAAA,KAAK,EAAE;AAAzB,OADS,EAET;AAAEH,QAAAA,IAAI,EAAE,SAAR;AAAmBG,QAAAA,KAAK,EAAE;AAA1B,OAFS,EAGT;AAAEH,QAAAA,IAAI,EAAE,UAAR;AAAoBG,QAAAA,KAAK,EAAE;AAA3B,OAHS,EAIT;AAAEH,QAAAA,IAAI,EAAE,YAAR;AAAsBG,QAAAA,KAAK,EAAE;AAA7B,OAJS,EAKT;AAAEH,QAAAA,IAAI,EAAE,UAAR;AAAoBG,QAAAA,KAAK,EAAE;AAA3B,OALS,CADJ;AAQHC,MAAAA,IAAI,EAAE;AACFJ,QAAAA,IAAI,EAAE,IADJ;AAEFG,QAAAA,KAAK,EAAE;AAFL;AARH,KAAP;AAaH,GAhBU;AAiBXE,EAAAA,QAAQ,EAAC;AACLC,IAAAA,QADK,cACK;AACN,aAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBF,QAAzB;AACH;AAHI,GAjBE;AAsBXG,EAAAA,OAAO,EAAE;AAELC,IAAAA,MAFK,cAEI;AAAA;;AACLC,MAAAA,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4B,KAAKR,IAAjC,EAAuC,UAACS,GAAD,EAAMC,EAAN,EAAa;AAChD,YAAI,CAACD,GAAL,EAAU;AACN,UAAA,KAAI,CAACT,IAAL,GAAY;AACRJ,YAAAA,IAAI,EAAE,IADE;AAERe,YAAAA,KAAK,EAAE,IAFC;AAGRC,YAAAA,IAAI,EAAE,IAHE;AAIRC,YAAAA,IAAI,EAAE;AAJE,WAAZ;AAMAC,UAAAA,KAAK,CAAC,SAAD,CAAL;AACH;AACJ,OAVD;AAWH;AAdI;AAtBE,CArCf","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: '',\n    data() {\n        return {\n            items: [\n          { name: 'Florida',place: 'FL' },\n          { name: 'Georgia', place: 'GA' },\n          { name: 'Nebraska', place: 'NE' },\n          { name: 'California', place: 'CA' },\n          { name: 'New York', place: 'NY' }\n        ],\n            form: {\n                name: null,\n                place: null,\n            }\n        }\n    },\n    computed:{\n        branches(){\n            return this.$store.state.branches\n        },\n    },\n    methods: {\n     \n        btnAdd() {\n            Meteor.call('insertBranch', this.form, (err, re) => {\n                if (!err) {\n                    this.form = {\n                        name: null,\n                        price: null,\n                        cust: null,\n                        memo: null,\n                    }\n                    alert('Success')\n                }\n            })\n        }\n    }\n}\n"]},"sourceType":"script","hash":"f716aa5dc7fb9a6bb83dc496153e273a0a87a109"}
